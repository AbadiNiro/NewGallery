@model IEnumerable<NewGallery.Models.Artist>

@{
    Layout = "~/Views/Shared/_LayoutUserMode.cshtml";
    ViewBag.Title = "Index";
}
<link href="@Url.Content("~/Content/Customer.css")" rel="stylesheet" type="text/css" />
<style>
    #more {
        display: none;
    }
</style>
<h2>Artist</h2>

<style>


    #searcher {
        background-color: #20c997;
    }

    th {
        padding: 5px;
        text-align: left;
    }

    td {
        padding: 5px;
        text-align: left;
    }

    svg{
        width:90%;
    }


</style>


<table style="width:100%">
    <tr>
        <th id="searcher">
            <form action="/Artists/Search" method="get">
                <span id="more">
                    Enter Full name: to search<br>
                    <input type="text" name="name">

                    <br>
                    <br>
                    Enter Favorite Style to search:<br>
                    <input type="text" name="favstyle">

                    <br>
                    <br>
                    Enter Rate to serch:<br>
                    <input type="text" name="rate">

                    <br>
                    <br>
                    <br /><br />
                    <input type="submit" value="Search">
                </span>
            </form>
        </th>
        <th colspan="2">
            <button onclick="myFunction()" id="myBtn">Advenced Search</button>
            <input type="text" id="textsearch" placeholder="For quick Artist name filter...">

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ArtistName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.FavoriteStyle)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Rate)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.ArtistName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FavoriteStyle)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Rate)
                        </td>
                        <td>
                            @Html.ActionLink("Details", "Details", new { id = item.ArtistID })
                        </td>
                    </tr>
                }

            </table>

        </th>
    </tr>
    


</table>


<!--chart-->



<div id="d3-container"></div>


<script src="https://d3js.org/d3.v6.min.js"></script>
<script>

    var myNamesArray = [];
    var myRateArray = [];

    @{  List<string> c_myNamesList = new List<string>();
        List<int> c_myRateList = new List<int>();

        int counter = 0;
        foreach (var item in Model)
        {
            c_myNamesList.Add(item.ArtistName);
            c_myRateList.Add(item.Rate);

            counter++;
        }

        string[] c_myNamesArray = c_myNamesList.ToArray();
        int[] c_myRateArray = c_myRateList.ToArray();

    }

    var myNamesArray = @Html.Raw(Json.Encode(c_myNamesArray));
    var myRateArray = @Html.Raw(Json.Encode(c_myRateArray));


    var data2 = [];
    var size = myNamesArray.length;

    for (var i = 0; i < size; i++) {
        var temp_data2 = { name: myNamesArray[i], score: myRateArray[i] };
        data2.push(temp_data2)
    }


    const width = 2400;
    const height = 450;
    const margin = { top: 50, bottom: 50, left: 50, right: 50 };

    const svg = d3.select('#d3-container')
        .append('svg')
        .attr('width', width - margin.left - margin.right)
        .attr('height', height - margin.top - margin.bottom)
        .attr("viewBox", [0, 0, width, height]);

    const x = d3.scaleBand()
        .domain(d3.range(data2.length))
        .range([margin.left, width - margin.right])
        .padding(0.1)

    console.log(typeof x)

    const y = d3.scaleLinear()
        .domain([0, 10])
        .range([height - margin.bottom, margin.top])

    svg
        .append("g")
        .attr("fill", '#20c997')
        .selectAll("rect")
        .data(data2.sort((a, b) => d3.descending(a.score, b.score)))
        .join("rect")
        .attr("x", (d, i) => x(i))
        .attr("y", d => y(d.score))
        .attr('title', (d) => d.score)
        .attr("class", "rect")
        .attr("height", d => y(0) - y(d.score))
        .attr("width", x.bandwidth());

    function yAxis(g) {
        g.attr("transform", `translate(${margin.left}, 0)`)
            .call(d3.axisLeft(y).ticks(null, data2.format))
            .attr("font-size", '15px')
    }

    function xAxis(g) {
        g.attr("transform", `translate(0,${height - margin.bottom})`)
            .call(d3.axisBottom(x).tickFormat(i => data2[i].name))
            .attr("font-size", '15px')
    }

    svg.append("g").call(xAxis);
    svg.append("g").call(yAxis);
    svg.node();
</script>
<!--chrat-->




<script src="~/js/jquery-3.3.1.min.js"></script>
<script>
    $("#textsearch").on("keyup", function () {

        var textenter = $(this).val();
        $("table tr").each(function (res) {
            if (res !== 0) {
                var id = $(this).find("td:nth-child(1)").text();
                if (id.indexOf(textenter) !== 0 && id.toLowerCase().indexOf(textenter.toLowerCase()) < 0) {
                    $(this).hide();
                }
                else {
                    $(this).show();
                }
            }
        });
    });
</script>
<script>
    function myFunction() {

        var moreText = document.getElementById("more");
        var btnText = document.getElementById("myBtn");

        if (moreText.style.display === "inline") {
            btnText.innerHTML = "Advenced Search";
            moreText.style.display = "none";
        }
        else {

            btnText.innerHTML = "Hide Advenced search";
            moreText.style.display = "inline";
        }
    }
</script>

